import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        // Task 1: Create an array, shuffle it, and print the shuffled array
        Integer[] numbers = {1, 2, 3, 4, 5, 6, 7};
        List<Integer> numberList = Arrays.asList(numbers);
        Collections.shuffle(numberList);
        System.out.println("Shuffled Array: " + numberList);

        // Task 2: Enter a Roman Number and convert it to an integer
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a Roman Number: ");
        String romanNumber = scanner.nextLine();
        int integerNumber = convertRomanToInteger(romanNumber);
        System.out.println("Roman to Integer: " + integerNumber);

        // Task 3: Check if the input is a pangram
        System.out.print("Enter a sentence: ");
        String sentence = scanner.nextLine();
        boolean isPangram = isPangram(sentence);
        if (isPangram) {
            System.out.println("The sentence is a pangram.");
        } else {
            System.out.println("The sentence is not a pangram.");
        }
    }

    // Function to convert a Roman numeral to an integer
    public static int convertRomanToInteger(String s) {
        int result = 0;
        int prevValue = 0;

        for (int i = s.length() - 1; i >= 0; i--) {
            char currentChar = s.charAt(i);
            int value = romanCharToValue(currentChar);

            if (value < prevValue) {
                result -= value;
            } else {
                result += value;
            }
            prevValue = value;
        }

        return result;
    }

    // Helper function to convert a Roman numeral character to its integer value
    private static int romanCharToValue(char c) {
        switch (c) {
            case 'I': return 1;
            case 'V': return 5;
            case 'X': return 10;
            case 'L': return 50;
            case 'C': return 100;
            case 'D': return 500;
            case 'M': return 1000;
            default: return 0;
        }
    }

    // Function to check if a sentence is a pangram
    public static boolean isPangram(String s) {
        s = s.toLowerCase();
        boolean[] alphabetCheck = new boolean[26];

        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);

            if ('a' <= c && c <= 'z') {
                alphabetCheck[c - 'a'] = true;
            }
        }

        for (boolean isPresent : alphabetCheck) {
            if (!isPresent) {
                return false;
            }
        }

        return true;
    }
}
